{"version":3,"sources":["GCard.jsx","GNote.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["GCard","props","className","onClick","deleteItem","id","class","title","content","GNote","useState","show","setShow","note","setNote","Items","setItems","InputEvent","event","name","target","value","prevData","onDelete","window","confirm","oldItems","filter","currdata","index","onSubmit","preventDefault","alert","type","onChange","placeholder","autoComplete","rows","column","style","display","map","val","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAgBeA,MAdf,SAAeC,GAKX,OACI,sBAAKC,UAAU,QAAf,UACI,mBAAGC,QALQ,WACfF,EAAMG,WAAWH,EAAMI,KAIKC,MAAM,iBAC9B,6BAAKL,EAAMM,QACX,4BAAIN,EAAMO,cCoGPC,MA5Gf,WAAkB,IAAD,EACWC,oBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAKWF,mBAAS,CAC7BH,MAAO,GACPC,QAAS,KAPA,mBAKNK,EALM,KAKAC,EALA,OASaJ,mBAAS,IATtB,mBASNK,EATM,KASCC,EATD,KAWPC,EAAa,SAACC,GAChB,IAAMC,EAAOD,EAAME,OAAOD,KACpBE,EAAQH,EAAME,OAAOC,MAE3BP,GAAQ,SAACQ,GACL,OAAO,2BACAA,GADP,kBAEKH,EAAOE,QA8BdE,EAAW,SAAClB,GACDmB,OAAOC,QAAQ,8BAExBT,GAAS,SAACU,GACN,OAAOA,EAASC,QAAO,SAACC,EAAUC,GAC9B,OAAOA,IAAUxB,SAQjC,OACI,qCACI,sBAAKH,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAf,SACI,6CAEJ,qBAAKA,UAAU,UAAf,SACI,uBAAM4B,SA7CL,SAACZ,GACdA,EAAMa,iBAEDlB,EAAKN,OAAUM,EAAKL,QAGbK,EAAKL,QAGLK,EAAKN,OAIbS,GAAS,SAACU,GACN,MAAM,GAAN,mBAAWA,GAAX,CAAqBb,OAGzBC,EAAQ,CACJP,MAAO,GACPC,QAAS,KAGbI,GAAQ,IAZRoB,MAAM,eAHNA,MAAM,cAHNA,MAAM,4BAyC4B9B,UAAU,YAApC,UACI,sBAAKA,UAAU,UAAf,UAEI,uBAAO+B,KAAK,OACRd,KAAK,QACLE,MAAOR,EAAKN,MACZ2B,SAAUjB,EACVkB,YAAY,QACZC,aAAa,MACbjC,QA3Eb,WACXS,GAAQ,MA2EY,uBACA,uBAEA,0BAAUyB,KAAK,GACXC,OAAO,GACPnB,KAAK,UACLE,MAAOR,EAAKL,QACZ0B,SAAUjB,EAAYgB,KAAK,OAC3BE,YAAY,UACZI,MAAO,CAAEC,QAAS7B,EAAO,QAAU,aAE3C,wBAAQ4B,MAAO,CAAEC,QAAS7B,EAAO,QAAU,QAA3C,oBAGR,qBAAKT,UAAU,QAAf,SACKa,EAAM0B,KAAI,SAACC,EAAKb,GACb,OAAO,cAAC,EAAD,CAEHxB,GAAIwB,EACJtB,MAAOmC,EAAInC,MACXC,QAASkC,EAAIlC,QACbJ,WAAYmB,GAJPM,WAQrB,wBAAQxB,GAAG,SAAX,SAAoB,2CAAa,mBAAGC,MAAM,iBAAtB,4BC9FjBqC,MARf,WACI,OACI,mCACI,cAAC,EAAD,OCKGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c5f5f35b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction GCard(props) {\r\n\r\n    const deleteNote = () => {\r\n        props.deleteItem(props.id);\r\n    }\r\n    return (\r\n        <div className=\"gcard\">\r\n            <i onClick={deleteNote} class=\"fas fa-trash\"></i>\r\n            <h2>{props.title}</h2>\r\n            <p>{props.content}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GCard;","import React, { useState } from \"react\";\r\nimport GCard from \"./GCard\";\r\n\r\nfunction GNote() {\r\n    const [show, setShow] = useState(false);\r\n    const Expand = () => {\r\n        setShow(true);\r\n    }\r\n    const [note, setNote] = useState({\r\n        title: \"\",\r\n        content: \"\"\r\n    });\r\n    const [Items, setItems] = useState([]);\r\n\r\n    const InputEvent = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n\r\n        setNote((prevData) => {\r\n            return {\r\n                ...prevData,\r\n                [name]: value\r\n            };\r\n        });\r\n    };\r\n\r\n    const addEvent = (event) => {\r\n        event.preventDefault();\r\n        // alert(\"clicked\");\r\n        if (!note.title && !note.content) {\r\n            alert(\"Write something first..\");\r\n            return;\r\n        } else if (!note.content) {\r\n            alert(\"Write note\");\r\n            return;\r\n        } else if (!note.title) {\r\n            alert(\"Add a title\");\r\n            return;\r\n        } else {\r\n            setItems((oldItems) => {\r\n                return [...oldItems, note];\r\n            });\r\n\r\n            setNote({\r\n                title: \"\",\r\n                content: \"\"\r\n            });\r\n\r\n            setShow(false);\r\n        };\r\n    };\r\n    const onDelete = (id) => {\r\n        var answer = window.confirm(\"Want to delete this note?\");\r\n        if (answer) {\r\n            setItems((oldItems) => {\r\n                return oldItems.filter((currdata, index) => {\r\n                    return index !== id;\r\n                });\r\n            });\r\n        } else {\r\n            return;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"gnote\">\r\n                <nav className=\"gnav\">\r\n                    <h1>Keep Note</h1>\r\n                </nav>\r\n                <div className=\"notebox\">\r\n                    <form onSubmit={addEvent} className=\"gtakenote\">\r\n                        <div className=\"ginputs\">\r\n\r\n                            <input type=\"text\"\r\n                                name=\"title\"\r\n                                value={note.title}\r\n                                onChange={InputEvent}\r\n                                placeholder=\"Title\"\r\n                                autoComplete=\"off\"\r\n                                onClick={Expand} />\r\n                            <br />\r\n                            <br />\r\n\r\n                            <textarea rows=\"\"\r\n                                column=\"\"\r\n                                name=\"content\"\r\n                                value={note.content}\r\n                                onChange={InputEvent} type=\"text\"\r\n                                placeholder=\"Notes..\"\r\n                                style={{ display: show ? \"block\" : \"none\" }} />\r\n                        </div>\r\n                        <button style={{ display: show ? \"block\" : \"none\" }}>+</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"gbody\">\r\n                    {Items.map((val, index) => {\r\n                        return <GCard\r\n                            key={index}\r\n                            id={index}\r\n                            title={val.title}\r\n                            content={val.content}\r\n                            deleteItem={onDelete} />\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <footer id=\"footer\"><p>Made with <i class=\"fas fa-heart\"></i> by Sudipta Das.</p></footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GNote;","import React from \"react\";\r\nimport GNote from \"./GNote\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <GNote/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./App\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}